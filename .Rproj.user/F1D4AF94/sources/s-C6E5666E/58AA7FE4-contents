---
title: "`ueda`: An R package for detecting and remoming outliers using Ueda's method"
author: 
  - Jorge I. Vélez^[Universidad del Norte, Barranquilla, Colombia. jvelezv@uninorte.edu.co]
  - Luis F. Machado^[Universidad del Norte, Barranquilla, Colombia. lfmachado@uninorte.edu.co]
fontsize: 13pt

header-includes:
  - \usepackage{amssymb}
  - \usepackage{latexsym}
  - \usepackage{amsmath} 
  - \usepackage{amsthm} 
  - \usepackage{bm} 
bibliography: [ueda.bib]
biblio-style: apalike
link-citations: yes
date: "September 28, 2021"
lang: "en-EN"
output: 
  html_document: 
    theme: readable #default, cerulean, journal, flatly, darkly, readable, spacelab, united, cosmo, lumen, paper, sandstone, simplex, and yeti.
    highlight: textmate # default, tango, pygments, kate, monochrome, espresso, zenburn, haddock, breezedark, and textmate
    number_sections: false
    fig_caption: true
    code_folding: show
---
```{r setup, include=FALSE}
require(knitr)
knitr::opts_chunk$set(echo = TRUE)
```

## Introduction

This collection of functions implements the $p$-value-based approach to the Box-Cox transformation proposed by Vélez, Correa and Marmolejo-Ramos (2015)[@ueda].

To illustrate our implementation in `R`, several examples are shown. 


## Packages we need

`lampdap` depends on the following packages:

```{r, message=FALSE}
## download and install
if(!require('devtools')) install.packages('devtools')
if(!require('ueda')) devtools::install_github('jivelez/ueda', force = TRUE)

## load
library(ueda)
```

<br>
<hr>

## Functions

The package consists of three functions:

```{r, eval=FALSE, message=FALSE}
## functions
ueda_index()
ueda_remove()
find_ueda_outliers()
```

For more information, type

```{r, eval=FALSE}
## help
library(help = 'ueda')
?ueda_index
?ueda_remove
?find_ueda_outliers
```

<br>
<hr>

### Example 

```{r}
## example
set.seed(13)

# introduce 5 outliers
x <- c(rnorm(25, 300, 10), rnorm(5, 400, 5))

# shuffle the data
x <- sample(x)
x

# removes up to 5 outliers
ueda_remove(x, smax = 5)

# get indexes
ueda_index(x, smax = 5)

# find outliers and get full output
find_ueda_outliers(x, smax = 5)
```



### References{-}









